package directed_3;

import edu.princeton.cs.algs4.*;

public class DepthFirstOrder {
	private boolean[] marked;
	private Queue<Integer> pre;
	private Queue<Integer> post;
	private Stack<Integer> reversePost;
	
	public DepthFirstOrder(Digraph graph) {
		pre = new Queue<Integer>();
		post = new Queue<Integer>();
		reversePost = new Stack<Integer>();
		marked = new boolean[graph.numberOfVertices()];
		
		for(int i = 0; i < graph.numberOfVertices(); i++) {
			if(!marked[i])
				dfs(graph, i);
		}
	}
		
	private void dfs(Digraph graph, int v) {
		pre.enqueue(v);
		
		marked[v] = true;
		for(int w : graph.adj(v))
			if(!marked[w])
				dfs(graph, w);
		post.enqueue(v);
		reversePost.push(v);
	}
	
	public Iterable<Integer> pre(){
		return pre;
	}
	
	public Iterable<Integer> post(){
		return post;
	}
	
	public Iterable<Integer> reversePost(){
		return reversePost;
	}

}
